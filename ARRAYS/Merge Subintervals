Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.

Approach : 
vector<vector<int>> merge(vector<vector<int>>& a) {
    vector<vector<int>>b;
    sort(a.begin(),a.end());
    int n=a.size();
    vector<vector<int>>ans;
    for(int i=0;i<n;i++){
        if(ans.size()==0||ans.back()[1]<a[i][0]){
            ans.push_back(a[i]);
        }
        else{
            ans.back()[1]=max(ans.back()[1],a[i][1]);
        }
    }
    return ans;
    }
Time Complexity : O(N)
