
Rotating a matrix by 90 degrees clockwise is a common operation in programming and can be achieved by a straightforward algorithm. Here's how you can implement it in C++:

Approach:
To rotate a matrix by 90 degrees clockwise:

Transpose the Matrix: Swap elements across the diagonal (transpose).
Reverse Each Row: Reverse the elements of each row to get the 90-degree rotated matrix.

void rotate(vector < vector < int >> & matrix) {
    int n = matrix.size();
    //transposing the matrix
    for (int i = 0; i < n; i++) {
    for (int j = 0; j < i; j++) {
        swap(matrix[i][j], matrix[j][i]);
    }
    }
    //reversing each row of the matrix
    for (int i = 0; i < n; i++) {
    reverse(matrix[i].begin(), matrix[i].end());
    }
}

Time Complexity: O(N*N) + O(N*N).
