Problem statement
Given an array ‘arr’ of integer numbers, ‘arr[i]’ represents the number of pages in the ‘i-th’ book.



There are ‘m’ number of students, and the task is to allocate all the books to the students.



Allocate books in such a way that:

1. Each student gets at least one book.
2. Each book should be allocated to only one student.
3. Book allocation should be in a contiguous manner.


You have to allocate the book to ‘m’ students such that the maximum number of pages assigned to a student is minimum.



If the allocation of books is not possible, return -1

MY APPROACH:

int f(vector<int>a,int mid){
    int st=1;int page=0;
    for(int i=0;i<a.size();i++){
        if(a[i]+page<=mid){
            page+=a[i];
        }
        else{
            st++;
            page=a[i];
        }
    }
    return st;
}

    int findPages(vector<int>& arr, int n, int m) {
    int l=*max_element(arr.begin(),arr.end());
    if(m>n)return -1;
    int h=accumulate(arr.begin(),arr.end(),0);
    while(l<=h){
        int mid=(l+h)/2;
        int cnt=f(arr,mid);
        if(cnt>m){
            l=mid+1;
        }
        else{
            h=mid-1;
        }
    }
    return l;
}
